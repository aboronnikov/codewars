package codewars

import codewars.SnailTaskClear1.snail
import org.scalatest.flatspec.AnyFlatSpec

class SnailTest extends AnyFlatSpec {

  "Empty input" should "return empty list" in {
    val input = List(List())
    val res = List()
    assert(snail(input) == res)
  }

  "First example" should "work" in {
    val input = List(
      List(1, 2, 3),
      List(4, 5, 6),
      List(7, 8, 9))
    val res = List(1, 2, 3, 6, 9, 8, 7, 4, 5)
    assert(snail(input) == res)
  }

  "Second example" should "work" in {
    val input = List(
      List(1, 2, 3),
      List(8, 9, 4),
      List(7, 6, 5))
    val res = List(1, 2, 3, 4, 5, 6, 7, 8, 9)
    assert(snail(input) == res)
  }

  "random" should "work" in {
    val input = List(
      List(345, 663, 785, 418, 101, 652, 896, 423, 153, 83, 442),
      List(856, 975, 732, 225, 603, 588, 119, 980, 565, 959, 342),
      List(996, 901, 670, 813, 218, 37, 340, 738, 902, 566, 15),
      List(468, 546, 512, 390, 884, 748, 363, 808, 18, 155, 548),
      List(504, 302, 385, 271, 500, 748, 967, 246, 268, 51, 134),
      List(747, 247, 970, 561, 368, 649, 759, 224, 392, 914, 862),
      List(920, 561, 832, 762, 846, 441, 980, 83, 194, 266, 530),
      List(716, 640, 380, 2, 15, 65, 85, 851, 432, 312, 911),
      List(559, 139, 601, 550, 146, 10, 756, 668, 516, 151, 863),
      List(435, 742, 347, 673, 407, 697, 304, 251, 526, 594, 697),
      List(713, 260, 65, 44, 294, 519, 617, 241, 958, 756, 746))
    val res = List(345, 663, 785, 418, 101, 652, 896, 423, 153, 83, 442, 342, 15, 548, 134,
      862, 530, 911, 863, 697, 746, 756, 958, 241, 617, 519, 294, 44, 65, 260, 713, 435, 559,
      716, 920, 747, 504, 468, 996, 856, 975, 732, 225, 603, 588, 119, 980, 565, 959, 566, 155,
      51, 914, 266, 312, 151, 594, 526, 251, 304, 697, 407, 673, 347, 742, 139, 640, 561, 247,
      302, 546, 901, 670, 813, 218, 37, 340, 738, 902, 18, 268, 392, 194, 432, 516, 668, 756,
      10, 146, 550, 601, 380, 832, 970, 385, 512, 390, 884, 748, 363, 808, 246, 224, 83, 851, 85,
      65, 15, 2, 762, 561, 271, 500, 748, 967, 759, 980, 441, 846, 368, 649)
    assert(snail(input) == res)
  }

  "random of 13" should "work" in {
    val input = List(
      List(388, 833, 498, 767, 320, 264, 972, 242, 88, 452, 642, 356),
      List(565, 8, 492, 292, 71, 35, 984, 582, 743, 306, 711, 983),
      List(21, 380, 929, 317, 7, 814, 94, 932, 367, 341, 994, 811),
      List(656, 721, 11, 109, 245, 106, 298, 348, 462, 74, 36, 391),
      List(15, 361, 204, 372, 855, 704, 119, 737, 986, 101, 260, 516),
      List(443, 293, 206, 747, 570, 816, 919, 550, 334, 37, 658, 992),
      List(815, 430, 837, 636, 418, 767, 874, 603, 618, 304, 600, 188),
      List(111, 514, 307, 173, 126, 190, 260, 966, 165, 809, 798, 485),
      List(17, 724, 479, 555, 102, 439, 495, 286, 690, 397, 136, 848),
      List(678, 371, 49, 228, 794, 483, 561, 528, 452, 933, 389, 990),
      List(517, 172, 190, 805, 736, 478, 218, 469, 824, 357, 421, 944),
      List(725, 588, 179, 123, 242, 443, 53, 748, 558, 107, 894, 421))
    val res = List(388, 833, 498, 767, 320, 264, 972, 242, 88, 452, 642, 356, 983, 811, 391,
      516, 992, 188, 485, 848, 990, 944, 421, 894, 107, 558, 748, 53, 443, 242, 123, 179, 588,
      725, 517, 678, 17, 111, 815, 443, 15, 656, 21, 565, 8, 492, 292, 71, 35, 984, 582, 743, 306,
      711, 994, 36, 260, 658, 600, 798, 136, 389, 421, 357, 824, 469, 218, 478, 736, 805, 190, 172,
      371, 724, 514, 430, 293, 361, 721, 380, 929, 317, 7, 814, 94, 932, 367, 341, 74, 101, 37, 304,
      809, 397, 933, 452, 528, 561, 483, 794, 228, 49, 479, 307, 837, 206, 204, 11, 109, 245, 106,
      298, 348, 462, 986, 334, 618, 165, 690, 286, 495, 439, 102, 555, 173, 636, 747, 372, 855, 704,
      119, 737, 550, 603, 966, 260, 190, 126, 418, 570, 816, 919, 874, 767)
    assert(snail(input) == res)
  }
}
